#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, РежимЗаписи, РежимПроведения)

	ДатаПроведенияРабот = '00010101';
	Специалист = "";
	ВремяНачалаРабот = '00010101';
	ВремяОкончанияРабот = '00010101'; 

	ТекстИзменения = "";			
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_ОбслуживаниеКлиентов.Специалист,
			|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот,
			|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРабот,
			|	ВКМ_ОбслуживаниеКлиентов.ВремяОкончанияРабот
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
		
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
	РезультатЗапроса = Запрос.Выполнить();
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		
		ТекстИзменения = СтрШаблон("Добавлен документ %1 от %2. Специалист %3, дата проведения работ: %4, время начала работ: %5, время окончания работ: %6",
			Объект.Номер, Объект.Дата, Объект.Специалист, Объект.ДатаПроведенияРабот,
			Формат(Объект.ВремяНачалаРабот, "ДЛФ=T"), Формат(Объект.ВремяОкончанияРабот, "ДЛФ=T"));
			
		НовыйЭлемент = Справочники.ВКМ_УведомленияБот.СоздатьЭлемент();
		НовыйЭлемент.Текст = ТекстИзменения;
		НовыйЭлемент.Записать();			
		
	Иначе
			
		ВыборкаДетальныеЗаписи.Следующий();
		ДатаПроведенияРабот = ВыборкаДетальныеЗаписи.ДатаПроведенияРабот;
		Специалист = ВыборкаДетальныеЗаписи.Специалист;
		ВремяНачалаРабот = ВыборкаДетальныеЗаписи.ВремяНачалаРабот;
		ВремяОкончанияРабот = ВыборкаДетальныеЗаписи.ВремяОкончанияРабот;
		
		Если ДатаПроведенияРабот <> Объект.ДатаПроведенияРабот Или Специалист <> Объект.Специалист Или
				ВремяНачалаРабот <> Объект.ВремяНачалаРабот Или
				ВремяОкончанияРабот <> Объект.ВремяОкончанияРабот Тогда
		
			ТекстИзменения = СтрШаблон("Изменен документ %1 от %2. Специалист %3, дата проведения работ: %4, время начала работ: %5, время окончания работ: %6",
				Объект.Номер, Объект.Дата, Специалист, ДатаПроведенияРабот,
				Формат(ВремяНачалаРабот, "ДЛФ=T"), Формат(ВремяОкончанияРабот, "ДЛФ=T"));

			НовыйЭлемент = Справочники.ВКМ_УведомленияБот.СоздатьЭлемент();
			НовыйЭлемент.Текст = ТекстИзменения;
			НовыйЭлемент.Записать();
			
		КонецЕсли;
			
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	//МассивПараметровВыбора = Новый Массив;
	//МассивПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Поставщик", Истина));
	//НовыеПараметрыВыбора =  Новый ФиксированныйМассив(МассивПараметровВыбора);
	//Элементы.Договор.ПараметрыВыбора = НовыеПараметрыВыбора;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ДатаНорм = ПроверкаДатДоговораНаКлиенте();
	
	Если Не ДатаНорм Тогда

		ДействияСОбъектом();
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДействияСОбъектом()
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = СтрШаблон("Период действия договора не соответствует дате договора %1.", Формат(Объект.Дата,"ДЛФ=DD"));
	Сообщение.КлючДанных = Объект.Договор.Ссылка;
	Сообщение.ПутьКДанным = "Объект";
	Сообщение.Поле = "ВКМ_ДатаНачалаДействияДоговора";
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Функция ПроверкаДатДоговораНаКлиенте()
	
	ОбъектДокумент = Объект.Договор.Ссылка.ПолучитьОбъект();
	
	Возврат ОбъектДокумент.ВКМ_ДатаНачалаДействияДоговора <= ОБъект.ДатаПроведенияРабот И 
			ОбъектДокумент.ВКМ_ДатаОкончанияДействияДоговора >= Объект.ДатаПроведенияРабот
		
КонецФункции

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

