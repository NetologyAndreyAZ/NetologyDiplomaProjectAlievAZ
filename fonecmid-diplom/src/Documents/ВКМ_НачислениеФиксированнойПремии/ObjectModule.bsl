
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ДополнительныеНачисления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;  
	
	ДопНачисления = СформироватьДополнительныеНачисления();
	
	Если ДопНачисления Тогда
		
		СформироватьУдержания();
		
		СформироватьДвиженияВзаморасчетыССотрудниками();	
		
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьДополнительныеНачисления()
	
	ДопНачисления = Ложь;
	
	Для Каждого Строка Из ДополнительныеНачисления Цикл
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);		
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ФиксированнаяПремия;
		Движение.Категория = Строка.Сотрудник.Категория;
		Движение.Результат = Строка.СуммаПремии;
		
		ДопНачисления = Истина;	
		
	КонецЦикла;
	
	Если ДопНачисления = Истина Тогда
		Движения.ВКМ_ДополнительныеНачисления.Записать();
	КонецЕсли;
	
	Возврат ДопНачисления;
	
КонецФункции

Процедура СформироватьУдержания()
	
	Для Каждого Строка Из ДополнительныеНачисления Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);		
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛПремия;
		Движение.Категория = Строка.Сотрудник.Категория;
		Движение.Результат = Строка.СуммаПремии * 0.13;
		
		ДопНачисления = Истина;	
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияВзаморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	СУММА(ЕСТЬNULL(ВКМ_Удержания.Результат, 0)) КАК СуммаУдержания
		|ПОМЕСТИТЬ ВТ_Удержания
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0)) КАК СуммаДопНачисления
		|ПОМЕСТИТЬ ВТ_ДопНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Удержания.Сотрудник КАК Сотрудник,
		|	ВТ_ДопНачисления.СуммаДопНачисления КАК СуммаДопНачисления,
		|	ВТ_Удержания.СуммаУдержания КАК СуммаУдержания,
		|	ЕСТЬNULL(ВТ_ДопНачисления.СуммаДопНачисления, 0) - ЕСТЬNULL(ВТ_Удержания.СуммаУдержания, 0) КАК Сумма
		|ИЗ
		|	ВТ_Удержания КАК ВТ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопНачисления КАК ВТ_ДопНачисления
		|		ПО ВТ_Удержания.Сотрудник = ВТ_ДопНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);		
		
	КонецЦикла;
	
КонецПроцедуры