#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.Источники = Новый ОписаниеТипов("ОбработкаОбъект.ВКМ_МассовоеСозданиеАктов");
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ЗаполнитьНаФорме();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ИДЗадания = "";
	Индикатор = 0;
	СтрокаСостояния = "";
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("Период", Объект.Период);

	СтруктураФоновогоЗадания = ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, ЭтотОбъект.УникальныйИдентификатор);
	
	ИДЗадания 	= СтруктураФоновогоЗадания.ИдентификаторЗадания;
	
	ПараметрыОжидания  = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	//ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	//ПараметрыОжидания.Интервал  = 1;
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания, ОповещениеОЗавершении, ПараметрыОжидания); 
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияИндикатор", 1);	
	
КонецПроцедуры

Процедура ЗаполнитьНаСервере() Экспорт

	ДанОбъект = РеквизитФормыВЗначение("Объект");
	ДанОбъектыТЧ = ДанОбъект.СозданныеРеализации;
	
	ДанОбъектыТЧ.Очистить();
	
	Выборка = ПолучитьВыборку();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат;		
	КонецЕсли;
	
	ДанОбъект = РеквизитФормыВЗначение("Объект");
	ДанОбъектыТЧ = ДанОбъект.СозданныеРеализации;
	
	ДанОбъектыТЧ.Очистить();
	
	Обработки.ВКМ_МассовоеСозданиеАктов.ТяжелаяОперация(Выборка, ДанОбъект, ДанОбъектыТЧ);

	ЗначениеВРеквизитФормы(ДанОбъект, "Объект");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьДанные(Результат, ДополнительныеПараметры) Экспорт

	ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		ЭтаФорма.СтрокаСостояния = "Ошибка";
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		ЭтаФорма.Индикатор = 100;
		ЭтаФорма.СтрокаСостояния = "Выполнено";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияИндикатор() Экспорт
	
	Прогресс = ПрочитатьПрогресс(ИДЗадания);
	
	Если НЕ ТипЗнч(Прогресс) = Тип("Структура") Тогда
		
		ЭтаФорма.СтрокаСостояния = "";
		Возврат;
		
	КонецЕсли;
	
	Если ТипЗнч(Прогресс) = Тип("Структура") 
			И Прогресс.Свойство("ЗавершеноАварийно") Тогда
		
		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат;
		
	КонецЕсли;
	
	Если Прогресс.Свойство("ЗаданиеВыполнено") И Прогресс.ЗаданиеВыполнено Тогда
		
		ЭтаФорма.Индикатор = 100;
		ЭтаФорма.СтрокаСостояния = "Задание завершено.";
		
	Иначе
		Если Прогресс.Свойство("Процент") Тогда
			
			ЭтаФорма.Индикатор = Прогресс.Процент;
			
		КонецЕсли;
		
		Если Прогресс.Свойство("Текст") Тогда
			
			ЭтаФорма.СтрокаСостояния = Прогресс.Текст;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьПрогресс(Знач ИдентификаторФоновогоЗадания) Экспорт
	
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторФоновогоЗадания);
	
	Если Задание = Неопределено Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		
		ОтключитьОбработчикОжидания("ОбработчикОжиданияИндикатор");
		Возврат Неопределено;
		
	КонецЕсли;
	
	// используем БСП
	ПрогрессЗадания = ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторФоновогоЗадания);
	
	Если ПрогрессЗадания = Неопределено Или ТипЗнч(ПрогрессЗадания) <> Тип("Структура") Тогда 
		
		ПрогрессЗадания = Новый Структура;
		
	КонецЕсли;
	
	ПрогрессЗадания.Вставить("ЗаданиеВыполнено", ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторФоновогоЗадания));
	
	Возврат ПрогрессЗадания;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНаФорме()
	
	Выборка = ПолучитьВыборку();
	
	Если Выборка.Количество() = 0 Тогда
		Возврат;		
	КонецЕсли;
	
	ДанОбъект = РеквизитФормыВЗначение("Объект");
	ДанОбъектыТЧ = ДанОбъект.СозданныеРеализации;
	
	ДанОбъектыТЧ.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДанОбъектыТЧ.Добавить();
		НоваяСтрока.Реализация = Выборка.Реализация;
		НоваяСтрока.Договор = Выборка.Договор;

	КонецЦикла;;

	ЗначениеВРеквизитФормы(ДанОбъект, "Объект");
		
КонецПроцедуры

&НаСервере
Функция ПолучитьВыборку()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_РеализацияДоговор.Реализация,
		|	ВКМ_РеализацияДоговор.Договор
		|ИЗ
		|	РегистрСведений.ВКМ_РеализацияДоговор КАК ВКМ_РеализацияДоговор
		|ГДЕ
		|	ВКМ_РеализацияДоговор.Период >= &ДатаНачала
		|	И ВКМ_РеализацияДоговор.Период <= &ДатаОкончания";
	
	ДатаНачала = Объект.Период.ДатаНачала;
	ДатаОкончания = Объект.Период.ДатаОкончания;
	Если ДатаНачала = Дата(1, 1, 1) И ДатаОкончания = Дата(1, 1, 1) Тогда
		ДатаОкончания = Дата(3999, 12, 31);
	КонецЕсли;
	 
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);	
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

&НаСервере
Функция ВыполнитьФоновоеЗаданиеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор)
	
//	ДанОбъект = РеквизитФормыВЗначение("Объект");
	//ДанОбъектыТЧ = ДанОбъект.СозданныеРеализации;
//	
//	ДанОбъектыТЧ.Очистить();
//	
//	Выборка = ПолучитьВыборку();
//	
//	Если Выборка.Количество() = 0 Тогда
//		Возврат Неопределено;		
//	КонецЕсли;
//	
//	ДанОбъект = РеквизитФормыВЗначение("Объект");
//	ДанОбъектыТЧ = ДанОбъект.СозданныеРеализации;

//	
	НаименованиеЗадания = "Моя длительная операции";

	ВыполняемыйМетод = "ВКМ_ДлительныеОперации.ТяжелаяОперация";	
	
	ПараметрыВыполнения 	= ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне 	= Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
//	
//	СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, ВыполняемыйМетод, Выборка, ДанОбъект, ДанОбъектыТЧ);
//	
//	ЗначениеВРеквизитФормы(ДанОбъект, "Объект");
//	
//	Возврат СтруктураФоновогоЗадания;
	СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, ВыполняемыйМетод, ПараметрыЗапуска);
	Возврат СтруктураФоновогоЗадания;

КонецФункции

&НаСервереБезКонтекста
Процедура СообщениеПользователюНаСервереБезКонтекста(Сообщение)
	
	ОбщегоНазначения.СообщитьПользователю(Сообщение);

КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
     //++ Алиев А.З. 22.05.25 Для обработок нужно переопределить параметры, чтобы не было лишних проверок по метаданным документов
//     ДанныеСтруктура = ЗаполнитьПараметрыКоманды(); //нужно обезличить ДанныеФормыСтруктура
//		ДополнительныеПараметры = Новый Структура;
//     ДополнительныеПараметры.Вставить("ЭтоФормаОбъекта", Ложь);
//     ДополнительныеПараметры.Вставить("ТребуетсяЗапись", Ложь);
//     ДополнительныеПараметры.Вставить("ТребуетсяПроведение", Ложь);
//     ДополнительныеПараметры.Вставить("ТребуетсяРаботаСФайлами", Ложь);
//     ДополнительныеПараметры.Вставить("ВызовСервераЧерезОбработкуОповещения", Истина);
//     ДополнительныеПараметры.Вставить("МассивСсылок", ПолучитьМассивСсылокНаДокументы());
     //--
	
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект); 
    //++ Алиев А.З. 22.05.25
//    ДополнительныеПараметры); //добавлен параметр с настройками переопределения
    //--

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
